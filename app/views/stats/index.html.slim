- content_for :title do
  h1
    | Statistiques
    = " pour le #{@departement}" if @departement.present?

.container.mt-3
  .card
    .card-body
      p.mb-0
        span> Afficher les statistiques par département :
        - @departements.each do |d|
          span>
            = link_to d, departement_stats_path(departement: d)
            | &nbsp;|
      - if @departement.present?
        = link_to "Retour aux statistiques de la plateforme", stats_path

.container.mt-3
  - if @departement.present? && Organisation.joins(:territory).where(territories: { departement_number: @departement }).empty?
    h3 Ce departement n'utilise pas RDV-Solidarités.
  - else
    .card.mb-5
      .card-body
        h2.card-title Nombre de RDV par statut
        .row
          .col-lg-4
            .px-1
              - %i[seen excused revoked noshow].each do |temporal_status|
                = render "stats/rdv_counter_without_link", \
                  temporal_status: temporal_status, \
                  count: @stats.rdvs.status(temporal_status).count
          .col-lg-4
            .px-1
              = render "stats/rdv_counter_without_link", \
                temporal_status: :unknown_past, \
                count: @stats.rdvs.status(:unknown_past).count
          .col-lg-4
            .px-1
              = render "stats/rdv_counter_without_link", \
                temporal_status: :unknown_future, \
                count: @stats.rdvs.status(:unknown_future).count
        hr
        .row
          .col-lg-4
            .px-1
              = render "stats/rdv_counter_without_link", \
                label: "Tous", \
                count: @stats.rdvs.count

    .card.mb-5
      .card-body
        = self_anchor "rdvs"
         h2.card-title RDV créés (#{@stats.rdvs.count})
        = column_chart rdvs_stats_path(departement: @departement), stacked: true

    - unless @departement.present?
      .card.mb-5
        .card-body
          = self_anchor "rdvs-departement"
            h2.card-title RDV créés par département(#{@stats.rdvs.count})
          = column_chart rdvs_stats_path(by_departement: true), stacked: true

    .card.mb-5
      .card-body
        = self_anchor "rdvs-service"
          h2.card-title RDV créés par service (#{@stats.rdvs.count})
        = column_chart rdvs_stats_path(by_service: true, departement: @departement), stacked: true

    .card.mb-5
      .card-body
        = self_anchor "rdvs-type"
          h2.card-title RDV par type (#{@stats.rdvs.count})
        = column_chart rdvs_stats_path(by_location_type: true, departement: @departement), stacked: true

    .card.mb-5
      .card-body
        = self_anchor "rdvs-status"
          h2.card-title RDV par statut
        /
          Note: colors are synced manually with the status css and the order of the stats.
          From stat.rb, Stat#rdvs_group_by_status:
            * stats are in this order: unknown seen excused revoked noshow
          From _rdv_status.scss, the colors are:
            "unknown": $info, #ffbc00
            "seen": $success, #0acf97
            "excused": $info, #39afd1
            "revoked": $teal, #02a8b5
            "noshow": $danger, #fa5c7c
        - colors = %w[#fa5c7c #02a8b5 #39afd1 #0acf97 #ffbc00]
        = column_chart rdvs_stats_path(by_status: true, departement: @departement), stacked: :percent, max: 100, suffix: "%", colors: colors

    .card.mb-5
      .card-body
        = self_anchor "notifications"
          h2.card-title "#{Receipt.model_name.human(count: 2)} (#{@stats.receipts.count})"
        - %i[event channel result].each do |attribute|
          h3.card-subtitle Par #{Receipt.human_attribute_name(attribute).downcase}
          = column_chart receipts_stats_path(group_by: attribute, departement: @departement), stacked: true
