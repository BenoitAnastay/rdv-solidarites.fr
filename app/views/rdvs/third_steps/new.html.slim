- content_for :title do
  .row.justify-content-md-center
    .col-md-6
      | Choisir l'usager
.row.justify-content-md-center
  .col-md-6
    .card
      ul.list-group.list-group-flush
        li.list-group-item
          i.fa.fa-check.fa-fw.mr-1.text-success
          | Motif :&nbsp;
          = @third_step.rdv.motif.name
        li.list-group-item
          i.fa.fa-check.fa-fw.mr-1.text-success
          | Professionnels :&nbsp;
          = @third_step.rdv.pros.map(&:full_name_and_specialite).to_sentence
        li.list-group-item
          i.fa.fa-check.fa-fw.mr-1.text-success
          = "Durée : #{@third_step.rdv.duration_in_min} minutes"
        li.list-group-item
          i.fa.fa-check.fa-fw.mr-1.text-success
          = "Commence le : #{l(@third_step.rdv.start_at, format: :human)}"
        - if @third_step.max_users_limit
          li.list-group-item
            i.fa.fa-check.fa-fw.mr-1.text-success
            i.fa.fa-users.fa-fw
            |  #{@third_step.max_users_limit} usagers maximum

      .card-body
        = render partial: 'layouts/model_errors', locals: { model: @third_step }

        = simple_form_for(@third_step.rdv, url: organisation_third_steps_path(@third_step.organisation)) do |f|
          = f.association :motif, as: :hidden
          - @third_step.rdv.pros.each do |p|
            = f.hidden_field "pro_ids][", value: p.id # https://stackoverflow.com/questions/2327621/creating-a-has-many-association-in-a-hidden-field
          = f.input :duration_in_min, as: :hidden
          = f.input :start_at, as: :hidden
          = f.input :max_users_limit, as: :hidden
          = f.association :user, collection: policy_scope(User), label_method: :full_name_and_specialite

          .row
            .col.text-left
              = link_to 'Revenir en arrière', new_organisation_second_step_path(@third_step.to_query), class: 'btn btn-link'
            .col.text-right
              = f.button :submit, 'Continuer'
