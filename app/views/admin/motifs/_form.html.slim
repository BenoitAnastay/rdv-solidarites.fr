= simple_form_for [:admin, motif.organisation, motif] do |f|

  = render partial: 'layouts/model_errors', locals: { model: motif }

  .card
    .card-body
      h5.card-title Configuration générale
      .form-row
        .col-md-6
          = f.association :service, collection: Service.with_motifs
        .col-md-6
          = f.input :name, collection: [], input_html: { data: {value: motif.name} }
      .form-row
        .col-md-4= f.input :default_duration_in_min
        .col-md-4= f.input :color, as: "color"

  .card
    .card-body
      h5.card-title Type de RDV
      = label_tag do
        = f.radio_button(:location_type, :public_office)
        span.ml-1= t("activerecord.attributes.motif.location_types.public_office")
        p.text-muted.font-14 Le RDV aura lieu au lieu sélectionné (MDS...)
      = label_tag do
        = f.radio_button(:location_type, :phone)
        span.ml-1= t("activerecord.attributes.motif.location_types.phone")
        p.text-muted.font-14 L'usager sera notifié que le RDV se passera par téléphone, au numéro indiqué dans son profil.
      = label_tag do
        = f.radio_button(:location_type, :home)
        span.ml-1= t("activerecord.attributes.motif.location_types.home")
        p.text-muted.font-14 L'usager sera notifié que le RDV aura lieu à l'adresse remplie dans son profil.

  .card
    .card-body
      h5.card-title RDV de suivi
      = f.input :follow_up, label: "Ce motif est réservé aux usagers bénéficiant d'un accompagnement"

  .card
    .card-body
      h5.card-title RDV secrétariat
      p.text-muted.font-14 Les membres du service Secrétariat pourront poser des RDV dans leur agenda et configurer les plages d'ouverture avec ce motif.
      = f.input :for_secretariat, label: 'Le RDV pourra être effectué par le service secrétariat'

  .card
    .card-body
      h5.card-title Prise de RDV en ligne par les usagers
      p.text-muted.font-14 Ce motif sera disponible à la réservation en ligne par les usagers.

      = f.input :reservable_online
      .form-row
        .col-md-4= f.input :min_booking_delay, collection: min_max_delay_options
        .col-md-4= f.input :max_booking_delay, collection: min_max_delay_options

  .card
    .card-body
      h5.mb-2 Sectorisation géographique
      .text-muted.mb-3
        span> Seules les recherches des usagers sont concernées par ces règles de sectorisation. Elles n'ont donc pas d'effet si le motif n'est pas réservable en ligne.
        = link_to "https://doc.rdv-solidarites.fr/sectorisation-geographique" do
          span> Documentation sur la sectorisation
          i.fa.fa-external-link-alt>
      .mb-2= label_tag do
        = f.radio_button(:sectorisation_level, Motif::SECTORISATION_LEVEL_DEPARTEMENT)
        span.ml-1= "Réservable par les usagers dans l'ensemble du #{current_organisation.departement}"
      = label_tag do
        = f.radio_button(:sectorisation_level, Motif::SECTORISATION_LEVEL_ORGANISATION)
        span.ml-1= "Réservable par les usagers uniquement dans les secteurs attribués à l'organisation #{current_organisation.name}"
        .text-muted.font-14.my-1.ml-3
          - sectors_attributed_to_orga = Sector.attributed_to_organisation(current_organisation)
          = t("motifs.form.sectorisation_level.sectors_attributed_to_orga", count: sectors_attributed_to_orga.count, sectors: sectors_attributed_to_orga.map(&:name).to_sentence.truncate(100), organisation: current_organisation.name)
      = label_tag do
        = f.radio_button(:sectorisation_level, Motif::SECTORISATION_LEVEL_AGENT)
        span.ml-1 Réservable par les usagers uniquement dans les secteurs attribués à des agents spécifiques
        - if motif.service.present?
          - attributions_group = SectorAttribution.level_agent_grouped_by_service(current_organisation).fetch(motif.service_id, {agents_count: 0, attributions: []})
          .text-muted.font-14.my-1.ml-3
            = t( \
              "motifs.form.sectorisation_level.sectors_attributed_to_agents", \
              count: attributions_group[:agents_count], \
              service: motif.service.name, \
              sectors_count_human: t("motifs.index.sectorisation_level_organisation", count: attributions_group[:sectors_count]), \
              sectors: attributions_group[:attributions].map { "#{_1.agent.full_name} -> #{_1.sector.name}" }.to_sentence.truncate(100) \
            )

  .card
    .card-body
      h5 Visibilité usager
      = label_tag do
        = f.radio_button(:visibility_type, :visible_and_notified)
        span.ml-1= t("activerecord.attributes.motif.visibility_types.visible_and_notified")
        p.text-muted.font-14 Le RDV sera visible dans la liste des RDVs côté usager, l'usager sera notifié par SMS et/ou email
      = label_tag do
        = f.radio_button(:visibility_type, :visible_and_not_notified)
        span.ml-1= t("activerecord.attributes.motif.visibility_types.visible_and_not_notified")
        p.text-muted.font-14 Le RDV sera visible dans la liste des RDVs côté usager, l'usager ne recevra aucune notification (ni SMS ni email)
      = label_tag do
        = f.radio_button(:visibility_type, :invisible)
        span.ml-1= t("activerecord.attributes.motif.visibility_types.invisible")
        p.text-muted.font-14 Le RDV sera invisible dans la liste des RDVs côté usager, l'usager ne recevra aucune notification (ni SMS ni email)

  .card
    .card-body
      h5 Instructions
      p.text-muted.font-14 Ces instructions sont affichées à l'usager avant et après sa prise de RDV. Laissez ces champs vides si vous ne souhaitez pas donner d'instructions.
      = f.input :restriction_for_rdv, input_html: {rows: 6}
      = f.input :instruction_for_rdv, input_html: {rows: 6}

  .row.mb-5
    - if motif.persisted?
      .col.text-left
        = link_to "Supprimer", admin_organisation_motif_path(motif.organisation, motif), method: :delete, class: "btn btn-outline-danger", data: { confirm: "Confirmez-vous la suppression de ce motif ?"}
    .col.text-right
      = f.button :submit
