- content_for(:menu_item) { @agent ? "menu-agendas" : "menu-rdvs-list" }

- content_for :title do
  ol.breadcrumb.m-0.p-0
    - if @agent
      li.breadcrumb-item.p-0
        - if @agent != current_agent
          = link_to "Agenda de #{@agent.full_name}", admin_organisation_agent_agenda_path(current_organisation, @agent)
        - else
          = link_to "Votre agenda", admin_organisation_agent_agenda_path(current_organisation, current_agent)
    li.breadcrumb-item.p-0.ml-2
      span> RDV
      span>= rdv_title_for_agent(@rdv)
      - if @rdv.cancelled?
        span.badge.badge-danger

.row
  .col-md-12
    .card
      .card-header
        .d-flex.justify-content-between.flex-wrap
          h5.header.mr-1= l(@rdv.starts_at.to_date, format: :human).capitalize
          = render "rdv_status_dropdown", rdv: @rdv, agent: @agent

      .card-body
        p.card-text
          i.fa.fa-fw.fa-calendar.mr-1
          = rdv_starts_at_and_duration(@rdv, :time_only)
          |&nbsp;
          = link_to "voir dans l'agenda", admin_organisation_agent_agenda_path(current_organisation, @rdv.agents.first, selected_event_id: @rdv.id, date: @rdv.starts_at.to_date)
        = render "rdv_details", rdv: @rdv, display_links_to_users: true
      .card-footer
        .d-flex.justify-content-end
          .btn-group
            = link_to t(".update"), edit_admin_organisation_rdv_path(@rdv.organisation, @rdv, agent_id: @agent&.id), class: "btn btn-outline-primary"
            = link_to t(".duplicate"), admin_organisation_agent_searches_path(current_organisation, service_id: @rdv.motif.service_id, motif_id: @rdv.motif_id, from_date: @rdv.starts_at + 1.day, user_ids: @rdv.user_ids, context: @rdv.context, lieu_ids: [@rdv.lieu_id], commit: "commit"), class: "btn btn-outline-primary"
.row
  .col-md-12
    - @rdv.users.each do |user|
      .card
        .card-header
          h5.header
            = "Notifications pour "
            = user.full_name
            = user_soft_deleted_from_current_organisation_tag(user)

        .card-body
          - displayable_user = DisplayableUserPresenter.new(user, current_organisation)
          p.card-text
            i.fa.fa-phone>
            = displayable_user.phone_number_and_notification
          p.card-text
            i.fa.fa-fw.fa-envelope>
            = displayable_user.email_and_notification

          - if displayable_user.notes.present?
            .d-flex title="Remarques"
              div.mr-1
                i.fa.fa-fw.fa-info-circle>
              div= displayable_user.notes

    - @rdv.rdvs_users.each do |rdv_user|
      - user = rdv_user.user
      .card
        - rdv_user_presenter = Admin::RdvUserPresenter.new(@rdv, user)
        .card-header.h5= "Rendez-vous précédents pour #{user.full_name}"
        = render "admin/rdvs/short_rdvs_list", user: user, rdvs: rdv_user_presenter.previous_rdvs_truncated
        - if rdv_user_presenter.previous_rdvs_more?
          .card-footer
            = link_to \
              "Voir les #{rdv_user_presenter.previous_rdvs_count} RDVs précédents…", \
              admin_organisation_rdvs_path(current_organisation, user_id: user.id, end: @rdv.starts_at)

= render "admin/versions/resource_versions_row", resource: @rdv, attributes_allowlist: ["user_ids", "agent_ids", "status", "starts_at", "ends_at", "lieu_id", "notes", "location", "context"]
